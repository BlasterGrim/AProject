// <auto-generated />
using EFGetStarted.AspNetCore.NewDb.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFGetStarted.AspNetCore.NewDb.Migrations
{
    [DbContext(typeof(BloggingContext))]
    [Migration("20181030213501_migration2")]
    partial class migration2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024");

            modelBuilder.Entity("EFGetStarted.AspNetCore.NewDb.Models.Blog", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Url");

                    b.HasKey("BlogId");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("EFGetStarted.AspNetCore.NewDb.Models.Cliente", b =>
                {
                    b.Property<string>("ClienteId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ContattoId");

                    b.Property<int>("SpedizioneId");

                    b.Property<string>("cognome");

                    b.Property<string>("dNascita");

                    b.Property<string>("nome");

                    b.Property<char>("sesso");

                    b.HasKey("ClienteId");

                    b.HasIndex("ContattoId");

                    b.HasIndex("SpedizioneId");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("EFGetStarted.AspNetCore.NewDb.Models.Contatto", b =>
                {
                    b.Property<int>("ContattoId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("eMail");

                    b.Property<string>("nCellulare");

                    b.Property<string>("nFax");

                    b.Property<string>("nTelefono");

                    b.HasKey("ContattoId");

                    b.ToTable("Contatto");
                });

            modelBuilder.Entity("EFGetStarted.AspNetCore.NewDb.Models.Fattura", b =>
                {
                    b.Property<int>("FatturaId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("iva");

                    b.Property<int>("quantitaProdotto");

                    b.Property<int>("sconto");

                    b.Property<decimal>("totFattura");

                    b.HasKey("FatturaId");

                    b.ToTable("Fattura");
                });

            modelBuilder.Entity("EFGetStarted.AspNetCore.NewDb.Models.Indirizzo", b =>
                {
                    b.Property<int>("IndirizzoId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("indirizzoFatturazione");

                    b.Property<string>("indirizzoSpedizione");

                    b.HasKey("IndirizzoId");

                    b.ToTable("Indirizzo");
                });

            modelBuilder.Entity("EFGetStarted.AspNetCore.NewDb.Models.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BlogId");

                    b.Property<string>("Content");

                    b.Property<string>("Title");

                    b.HasKey("PostId");

                    b.HasIndex("BlogId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("EFGetStarted.AspNetCore.NewDb.Models.Spedizione", b =>
                {
                    b.Property<int>("SpedizioneId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("costiSpedizione");

                    b.Property<string>("descrizione");

                    b.Property<string>("nome");

                    b.HasKey("SpedizioneId");

                    b.ToTable("Spedizione");
                });

            modelBuilder.Entity("EFGetStarted.AspNetCore.NewDb.Models.Cliente", b =>
                {
                    b.HasOne("EFGetStarted.AspNetCore.NewDb.Models.Contatto", "Contatto")
                        .WithMany()
                        .HasForeignKey("ContattoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EFGetStarted.AspNetCore.NewDb.Models.Spedizione", "Spedizione")
                        .WithMany()
                        .HasForeignKey("SpedizioneId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EFGetStarted.AspNetCore.NewDb.Models.Post", b =>
                {
                    b.HasOne("EFGetStarted.AspNetCore.NewDb.Models.Blog", "Blog")
                        .WithMany("Posts")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
